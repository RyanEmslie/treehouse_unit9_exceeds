{"version":3,"sources":["images/404.png","config.js","components/Header.js","components/Search.js","components/Nav.js","components/Results.js","components/NoResults.js","components/ResultsList.js","components/Home.js","components/NSFW.js","components/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","apiKey","Header","react_default","a","createElement","className","Search","state","searchText","onSearchChange","event","_this","setState","target","value","handleSubmit","preventDefault","props","onSearch","currentTarget","reset","history","push","onSubmit","this","type","onChange","name","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","Nav","NavLink","exact","to","Results","alt","src","url","NoResults","ResultsList","pics","results","data","title","loadingState","console","log","length","map","pic","components_Results","key","id","url_s","components_NoResults","undefined","queryTitle","Home","NSFW","NoMatch","require","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","performSearch","query","arguments","concat","axios","get","then","response","photos","photo","loading","catch","error","treeSearch","trees","carsonSearch","carson","housesSearch","houses","_this2","BrowserRouter","components_Header","components_Search","components_Nav","Switch","Route","path","component","render","components_ResultsList","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.416f73de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.fe183b84.png\";","const apiKey = '2543a40b79003c73fc6ee24e42b5839a';\r\n// secret: 2b4b648ff0150fb0\r\nexport default apiKey;","import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <div>\r\n    <h1 className=\"title\">\r\n      <strong>FLICKR API SEARCH APP</strong>\r\n    </h1>\r\n  </div>\r\n);\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nclass Search extends Component {\r\n  \r\n  //state holding the input value from search bar\r\n  state = {\r\n    searchText: \"\"\r\n  };\r\n\r\n  //state is changed dynamically as text is entered\r\n  onSearchChange = event => {\r\n    this.setState({\r\n      searchText: event.target.value\r\n    });\r\n  };\r\n \r\n  //when form is sumbitted the state is passed back up to App component to Axios\r\n  //URL is programatically changed to the results page\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSearch(this.state.searchText);\r\n    event.currentTarget.reset();\r\n    this.props.history.push(\"/results\");\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"search\"\r\n            onChange={this.onSearchChange}\r\n            name=\"search\"\r\n            placeholder=\"...Alligators\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"search-button\">\r\n            <svg\r\n              fill=\"#fff\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 23 23\"\r\n              width=\"24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            </svg>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//withRouter used with programatically change URL to search results page\r\nexport default withRouter(Search);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Nav = () => (\r\n        <nav className=\"main-nav\">\r\n          <ul>\r\n            <li><NavLink exact to='/'>Home</NavLink></li>\r\n            <li><NavLink to='/trees'>Trees</NavLink></li>\r\n            <li><NavLink to='/houses'>Houses</NavLink></li>\r\n            <li><NavLink to='/carson'>RyanCarson</NavLink></li>\r\n            <li><NavLink to='/nsfw'>NSFW</NavLink></li>\r\n          </ul>\r\n      </nav>\r\n      )\r\n      \r\nexport default Nav;","import React from 'react';\r\n\r\n//renders list item of mapped search arrays\r\nconst Results = props => (\r\n  <li>\r\n    <img alt='' src={props.url} />\r\n  </li>\r\n\r\n);\r\n\r\nexport default Results;","import React from \"react\";\r\n\r\n//rendered when Axios returns an empty array\r\nconst NoResults = props => (\r\n  <li className=\"photo-container not-found\">\r\n    <h3>'Sorry, No Pictures'</h3>\r\n  </li>\r\n);\r\n\r\nexport default NoResults;\r\n","import React from \"react\";\r\nimport Results from \"./Results\";\r\nimport NoResults from \"./NoResults\";\r\n\r\n\r\n//\"container component\"\r\n\r\nconst ResultsList = props => {\r\n  const results = props.data;\r\n  let pics;\r\n  const title = props.title;\r\n  const loadingState = props.loadingState;\r\n  console.log('Loading State = ' + loadingState)\r\n\r\n  if (results.length > 0) {\r\n    pics = results.map(pic => <Results key={pic.id} url={pic.url_s} />);\r\n  } else {\r\n    pics = <NoResults />;\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <hr />\r\n      {(title === undefined) ? <h1> Search results for '{props.queryTitle}'</h1> : <h1>Photos {title}</h1> }      \r\n      <div>\r\n        <div className=\"photo-container\">\r\n          {\r\n            (!loadingState) ? <ul>{pics}</ul> : <p> Loading... </p>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsList;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"homeParagraph\">\r\n      <p>Welcome to my Flickr React App.</p>\r\n      <p>The app was created using the Reach JavaScript library</p>\r\n      <p>\r\n        Use the search bar to search for photos located on the Flickr database.\r\n      </p>\r\n      <p>Default photos have been provided within the navigation links.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\n//Why would you search for these pictures at work?\r\nconst NSFW = () => (\r\n        <div>\r\n          <p>\r\n            <img alt='' src='https://thumbs.gfycat.com/ConcreteAdorableHorse-small.gif'/>\r\n          </p>\r\n        </div>\r\n      )\r\n      \r\nexport default NSFW;","import React, { Component } from \"react\";\r\n\r\n\r\n//this component is rendered when any non-nav link url is entered\r\nclass NoMatch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img alt=\"not found\" src={require(\"../images/404.png\")} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport axios from \"axios\";\nimport apiKey from \"./config.js\";\n\n// App components\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport Nav from \"./components/Nav\";\nimport ResultsList from \"./components/ResultsList\";\nimport Home from \"./components/Home\";\nimport NSFW from \"./components/NSFW\";\nimport NoMatch from \"./components/NoMatch\";\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      trees: [],\n      carson: [],\n      houses: [],\n      query: '',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.performSearch();\n    this.treeSearch();\n    this.carsonSearch();\n    this.housesSearch();\n  }\n\n  performSearch = (query = 'Alligators') => {\n    this.setState({query: query})\n    const url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&per_page=24&format=json&nojsoncallback=1&tags=${query}&extras=url_s`;\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({\n          results: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n\n  treeSearch = () => {\n    const url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&per_page=24&format=json&nojsoncallback=1&tags=forest&extras=url_s`;\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({\n          trees: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n\n  carsonSearch = () => {\n    const url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&per_page=24&format=json&nojsoncallback=1&tags=ryan+carson&extras=url_s`;\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({\n          carson: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n\n  housesSearch = () => {\n    const url = `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&per_page=24&format=json&nojsoncallback=1&tags=houses&extras=url_s`;\n    axios\n      .get(url)\n      .then(response => {\n        this.setState({\n          houses: response.data.photos.photo,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header />\n          <Search onSearch={this.performSearch} />\n          <Nav />\n\n          <Switch>\n            <Route exact path=\"/\" component={ Home } />\n            \n            <Route exact path=\"/results\" render={ () => <ResultsList \n              data={this.state.results} \n              loadingState={this.state.loading} \n              queryTitle={this.state.query} />} />\n            \n            <Route exact path=\"/trees\" render={ () => <ResultsList \n              data={this.state.trees} \n              loadingState={this.state.loading} \n              title={'of Trees'} />} />\n            \n            <Route exact path=\"/houses\" render={ () => <ResultsList \n              data={this.state.houses} \n              loadingState={this.state.loading} \n              title={'of Houses'}/>} />\n            \n            <Route exact path=\"/carson\" render={ () => <ResultsList \n              data={this.state.carson} \n              loadingState={this.state.loading} \n              title={'of Ryan Carson'}/>} />\n            \n            <Route exact path=\"/nsfw\" component={NSFW} />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n} //class App\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}